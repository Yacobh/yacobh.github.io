{"version":3,"sources":["universo/geo.cljs"],"mappings":";AAKC;;;6BAAA,7BAAMA;AAAN,AACE,IAAMC,KAAG,AAACC;AAAV,AACM,MAAA,NAACC,AACD,qCAAO,WAAKC,hDAIZ,AAGA;AAPO,AACE,oBAAI,AAAMA;AACR,OAAOA;;AACP,MAAO,KAAAC,MAAW,CAAA,oDAAa,AAAUD;;SAC7C,WAAKE;AAAL,AACE,kEAAA,2CAAA,2DAAA,KAAA,tKAACC,wDAAWN,mKACU,iHAAA,2EAAA,5LAACO,0DAAQF;UAChC,WAAKG;AAAL,AACE,kEAAA,2CAAA,2DAAA,MAAA,vKAACF,wDAAWN,sKACW,AAAWQ;;;AAChDR;;AAGJ,4BAAA,5BAAMS;AAAN,AAAA,kDAAA,qFAAA,iFAAA,sIAAA,iFAAA,iGAAA,7ZACe,AAAaC,kFACf,AAAYA,kFACX,AAACC,kDAAU,AAAaD,mFACzB,AAAYA,4FACN,AAAiBA,gFACzB,AAAUA;;AAErB,6BAAA,7BAAME;AAAN,AACE,IAAMC,OAAK,KAAAC;IACLC,gBAAc,AAAW,AAAkB,AAAiBC;IAC5DC,SAAO,AAAoBJ;IAC3BK,eAAa,UAAA,TAAGD;AAHtB,AAAA,kDAAA,2EAAA,gFAAA,kFAAA,wFAAA,xQAIaF,uFACME,4EACFC,+EACF,AAAiBL,mFACnB,AAAcA;;AAE7B,2BAAA,3BAAMM;AAAN,AAAA,kDAAA,oEAAA,uEAAA,oFAAA,oFAAA,5PACU,AAASC,sEACR,AAAUA,gFACL,AAAcA,qFACdC,mFACA,sCAAA,yBAAA,7CAAM,AAAeD,oBACnB,AAASE;;AAG3B,gCAAA,hCAAMC;AAAN,AACE,IAAMC,KAAG,AAAW,AAAkB,AAAiBR;AAAvD,AACE,oBACE,YAAA,ZAAWQ;AADb,kDAAA,0DAAA,cAAA,qDAAA;;AAAA,oBAEE,YAAA,ZAAWA;AAFb,kDAAA,0DAAA,YAAA,qDAAA;;AAAA,oBAGE,YAAA,ZAAWA;AAHb,kDAAA,0DAAA,WAAA,qDAAA;;AAAA,oBAIE,YAAA,ZAAWA;AAJb,kDAAA,0DAAA,YAAA,qDAAA;;AAAA,oBAKE,YAAA,ZAAWA;AALb,kDAAA,0DAAA,QAAA,qDAAA;;AAAA,oBAME,YAAA,ZAAWA;AANb,kDAAA,0DAAA,cAAA,qDAAA;;AAAA,oBAOE,YAAA,ZAAWA;AAPb,kDAAA,0DAAA,iBAAA,qDAAA;;AAAA,oBAQE,YAAA,ZAAWA;AARb,kDAAA,0DAAA,cAAA,qDAAA;;AAAA,oBASE,YAAA,ZAAWA;AATb,kDAAA,0DAAA,UAAA,qDAAA;;AAAA,oBAUE,YAAA,ZAAWA;AAVb,kDAAA,0DAAA,WAAA,qDAAA;;AAAA,oBAWE,YAAA,ZAAWA;AAXb,kDAAA,0DAAA,SAAA,qDAAA;;AAAA,oBAYE,YAAA,ZAAWA;AAZb,kDAAA,0DAAA,aAAA,qDAAA;;AAAA,oBAaE,YAAA,ZAAWA;AAbb,kDAAA,0DAAA,QAAA,qDAAA;;AAAA,oBAcE,YAAA,ZAAWA;AAdb,kDAAA,0DAAA,SAAA,qDAAA;;AAAA,oBAeE,YAAA,ZAAWA;AAfb,kDAAA,0DAAA,eAAA,qDAAA;;AAAA,oBAgBE,YAAA,ZAAWA;AAhBb,kDAAA,0DAAA,OAAA,qDAAA;;AAAA,AAAA,kDAAA,0DAAA,QAAA,qDAAA;;;;;;;;;;;;;;;;;;;AAoBJ,gCAAA,hCAAMC;AAAN,AACE,IAAMC,eAAa,AAACjB;IACdkB,gBAAc,AAACf;IACfgB,cAAY,AAACT;IACbU,mBAAiB,AAACN;IAClBO,UAAQ,gDAAA,2CAAA,2DAAA,tJAACC;IACTC,sBAAc,gDAAA,hDAACD;AALrB,AAQE,+DAAA,2CAAA,nGAACE,uLAEC;AAAA,AACE,IAAAC,mBAAA,AAAAjC,mDAAA;AAAA,AAAA,AAAAkC,kCAAA;AAAA,AAAA,IAAAC,mBAAA,iBAAAC,wBAAA,WAAAC;AAAA,AAAA,IAAAC,kBAAA,CAAAD,YAAA;AAAA,AAAA,GAAA,CAAAC,oBAAA;AAAA,IAAAC,aAAA,AACoBzC;IADpBuC,kBAAAA;AAAA,AAAA,OAAAG,4CAAAH,gBAAA,IAAAE;;AAAA,GAAA,CAAAD,oBAAA;AAAA,IAAAG,aAAA,CAAAJ,YAAA;IAAAK,aAAA,8BAAAD,9BAEKkB,sBAAO9B;IAFZQ,kBAAAA;AAAA,AAAA,OAAAM,6CAAAN,gBAAAK;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,IAAAE,iBAAA,CAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,AAAA,CAAAA,eAAA,OAAAC;;AAAA,CAAAD,eAAA,OAAA;;AAAAA;;iFAAAP;;AAAA,AAAA,IAAAS,2BAAA,iBAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA,AAAAX,sBAAAC;AAAA,AAAA,GAAA,AAAAW,mCAAAD,sBAAA;AAAA;;AAAAA;;;;gBAAA,IAAAE,oBAAAC;AAAA,AAAA,IAAAC,uBAAAd;AAAA,AAAA,CAAAc,qBAAA,OAAAF;;AAAAE;AAAA,GAAA,AAAAC,cAAA,CAAAf,YAAA;AAAA,IAAAgB,uBAAAhB;AAAA,AAAA,CAAAgB,qBAAA,OAAA,AAAAC,gBAAA,CAAAjB,YAAA;;AAAAgB;AAAA,MAAAJ;;;AAAA;;AAAA,AAAA,GAAA,AAAAD,mCAAAF,yBAAA;AAAA,eAAAT;;;;AAAAS;;;;;wEAAAT;;;;;iFAAAA;;;;;;;;;IAAAkB,uBAAA,iBAAAC,iBAAA,AAAArB;AAAA,AAAA,CAAAqB,eAAAC,AAAA,OAAAxB;;AAAAuB;;AAAA,AAAA,OAAAE,2DAAAH;;;AAAAtB;GAHJ,yEAQE;AAAA,AAAA,0FAAA,yFAAA,mFAAA,0EAAA,mFAAA,oPAAA,mFAAA,8EAAA,2CAAA,6DAAA,5cAGS,mJAAA,tGAAK,AAAA,mFAAOL;AAHrB,AAKiB,OAACgC,mDAAM7B,oBAAc8B;sHALtC,mFAAA,6EAAA,mFAAA,wEAAA,mFAAA,iDAAA,oCAAA,mFAAA,jqBAMK,kBAAA,AAAAC,sCAAA,mBAAA,zCAAK/B,6qBAMD,iBAAAgC,WAAM,AAAA,4FAAWtC;AAAjB,AAAA,QAAAsC;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;;AAOE,OAAA,4FAAWtC;;;aACjB,kBAAA,AAAAqC,sCAAA,AAAA,mFAAA,oEAAA,mFAAA,wDAAA,8BAAA,mFAAA,zaAAO/B,2dAIH,iBAAAiC,qBAAA,sDAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAf,cAAAa;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAC,6BAAAH;AAAA,IAAAI,kBAq2EmC,AAAAqB,sBAAAzB;IAr2EnCK,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,WAAA,AAAAK,eAAAN,gBAAAK,tCAAMS;AAAN,AAAA,AAAA,AAAAP,uBAAAJ,SAAA,mFAAA,gDAAA,2CAAA,oDACaW,aAAMA;;AADnB,eAAA,CAAAT,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,4CAAA,AAAAC,qBAAAf;;AAAA,OAAAY,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,WAAA,AAAAlB,gBAAAW,vBAAMkB;AAAN,AAAA,OAAAF,eAAA,mFAAA,gDAAA,2CAAA,8EAAA,AAAAF,4CAAA,AAAAG,eAAAjB,rFACakB,aAAMA;;;AADnB;;;;GAAA,KAAA;;AAAA,AAAA,OAAAnB,mBAAW,AAAA,6FAAYvC;mCAxBhC,mFAAA,wEAAA,mFAAA,iDAAA,oCAAA,mFAAA,qsCAAA,mFAAA,wEAAA,mFAAA,iDAAA,+CAAA,mFAAA,1gEAoBK,kdAUI,AAAA,2FAAWC,uBACf,kBAAA,AAAAoC,sCAAA,AAAA,mFAAA,oEAAA,mFAAA,8CAAA,mFAAA,wDAAA,8IAAA,mFAAA,8CAAA,mFAAA,wDAAA,yIAAA,yBAAA,r/BAAO/B,gdAEyB,AAAA,gGAAaL,0TACb,AAAA,mGAAeA,qgBAK3C,mJAAA,tGAAK,AAAA,mFAAOE,mEAAsB,AAAA,wFAAUA,qCAChD,kBAAA,AAAAkC,sCAAA,AAAA,mFAAA,oEAAA,mFAAA,8CAAA,mFAAA,wDAAA,sBAAA,qCAAA,mFAAA,8CAAA,mFAAA,wDAAA,2BAAA,mDAAA,90BAAO/B,41BAMR,kBAAM,iBAAAqD,oBAAK,AAACvB,cAAI,AAAA,yFAAA,AAAAC,gBAAWjC;AAArB,AAAA,GAAAuD;AAA+B,OAAA,yFAAA,AAAAtB,gBAAWjC;;AAA1CuD;;MAAN,AAAA,mFAAA,wEAAA,mFAAA,iDAAA,+BAGG,iBAAMhF,OAAK,AAAA,mFAAA,AAAA0D,gBAAQjC;AAAnB,AAAA,0FAAA,mDAAA,mFAAA,8CAEO,uIAAA,1FAAK,AAAA,mFAAOzB,wDAAW,AAAA,mGAAeA,yBAC1C,kBAAA,AAAA0D,sCAAA,AAAA,mFAAA,oEAAA,mFAAA,8CAAA,mFAAA,wDAAA,0GAAA,mFAAA,8CAAA,mFAAA,wDAAA,oHAAA,n6BAAO/B,wcAEiB,AAAA,6EAAK3B,0SACJ,AAAA,8EAAMA;aATrC,cAYD,kBAAA,AAAA0D,sCAAA,AAAA,mFAAA,qFAAA,mFAAA,iDAAA,qDAAA,mFAAA,sEAAA,mFAAA,uEAAA,mFAAA,uDAAA,qBAAA,mFAAA,55BAAO/B,i9BAMK,mJAAA,SAAA,oJAAA,UAAA,mJAAA,SAAA,iJAAA,OAAA,AAAA,5lBACE,sHAAA,tHAAW,AAAA,+FAAaN,6DACxB,sHAAA,tHAAW,AAAA,+FAAaA,+DACxB,sHAAA,tHAAW,AAAA,+FAAaA,6DACxB,sHAAA,tHAAW,AAAA,+FAAaA;qBAVtC,mFAAA,uEAAA,mFAAA,uDAAA,mBAAA,mFAAA,+KAAA,mFAAA,uEAAA,mFAAA,uDAAA,oBAAA,mFAAA,yXAAA,mFAAA,uEAAA,mFAAA,uDAAA,yBAAA,mFAAA,0OAAA,x/CAeY,AAAA,4FAAWA,8dAIX,gJAAA,nGAAK,AAAA,qFAAQE,mEAAiB,AAAA,uFAASA,6eAIvC,uHAAA,iBAAA,tHAAI,AAAA,sFAASF;;;AAEnC,+BAAA,/BAAM4D;AAAN,AACE,IAAMF,OAAK,AAAY1E;IACjB6E,OAAK,AAAW,KAAAzE;IAEhB0E,WAAS,iBAAA,mBAAA,iBAAA,gBAAA,AAAA,nEACE,QAAA,PAAGD,mCACH,QAAA,PAAGA;;IAGdE,YAAU,iBAAAC,WAAM,eAAA,IAAA,nBAAYN;AAAlB,AAAA,QAAAM;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;KAAA;AAAA;;;;AAAA;;;;AARhB,AAAA,0FAAA,kFAAA,mFAAA,8FAAA,mFAAA,+JAAA,mFAAA,8CAAA,haAgBQ,UAAA,TAAKF,6KACN,CAAA,mFAAuCC","names":["universo.geo/fetch-ip-info","ch","cljs.core.async.chan","js/fetch","response","js/Error","data","cljs.core.async.put_BANG_","cljs.core.js__GT_clj","error","universo.geo/browser-info","js/navigator","cljs.core.array_seq","universo.geo/timezone-info","date","js/Date","timezone-name","js/Intl","offset","offset-hours","universo.geo/screen-info","js/screen","js/devicePixelRatio","js/screen.orientation","universo.geo/estimate-country","tz","universo.geo/geo-info-display","browser-data","timezone-data","screen-data","country-estimate","ip-data","reagent.core.atom","show-details?","reagent.core.create_class","c__11659__auto__","cljs.core.async.impl.dispatch/run","f__11660__auto__","switch__11495__auto__","state_11921","state_val_11922","inst_11916","cljs.core.async.impl.ioc-helpers/take!","inst_11918","inst_11919","cljs.core.async.impl.ioc-helpers/return-chan","statearr-11923","state-machine__11496__auto__","ret-value__11497__auto__","result__11498__auto__","cljs.core/keyword-identical?","ex__11499__auto__","e11924","statearr-11925","cljs.core/seq","statearr-11926","cljs.core/first","state__11661__auto__","statearr-11927","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core/reset!","cljs.core.swap_BANG_","cljs.core/not","cljs.core/deref","G__11928","iter__5480__auto__","s__11930","cljs.core/LazySeq","temp__5804__auto__","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__11932","cljs.core/chunk-buffer","i__11931","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__11929","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","lang","and__5000__auto__","universo.geo/welcome-message","hour","greeting","lang-name","G__11933","cljs.core/chunk-first"],"sourcesContent":["(ns universo.geo\n   (:require [reagent.core :as r]\n            [cljs.core.async :as async :refer [go <!]]))\n\n ;; \u2705 Sin dependencias externas - Funciona siempre\n (defn fetch-ip-info \"Usa fetch API nativo del navegador\" []\n   (let [ch (async/chan)]\n     (-> (js/fetch \"https://ipapi.co/json/\")\n         (.then (fn [response]\n                  (if (.-ok response)\n                    (.json response)\n                    (throw (js/Error. (str \"HTTP \" (.-status response)))))))\n         (.then (fn [data]\n                  (async/put! ch {:success true\n                                  :data (js->clj data :keywordize-keys true)})))\n         (.catch (fn [error]\n                   (async/put! ch {:success false\n                                   :error (.-message error)}))))\n     ch))\n\n ;; Informaci\u00f3n que NO requiere APIs externas\n (defn browser-info []\n   {:user-agent (.-userAgent js/navigator)\n    :language (.-language js/navigator)\n    :languages (array-seq (.-languages js/navigator))\n    :platform (.-platform js/navigator)\n    :cookie-enabled (.-cookieEnabled js/navigator)\n    :online (.-onLine js/navigator)})\n\n (defn timezone-info []\n   (let [date (js/Date.)\n         timezone-name (.timeZone (.resolvedOptions (.DateTimeFormat js/Intl)))\n         offset (.getTimezoneOffset date)\n         offset-hours (/ offset -60)]\n     {:timezone timezone-name\n      :offset-minutes offset\n      :offset-hours offset-hours\n      :local-time (.toLocaleString date)\n      :utc-time (.toUTCString date)}))\n\n (defn screen-info []\n   {:width (.-width js/screen)\n    :height (.-height js/screen)\n    :color-depth (.-colorDepth js/screen)\n    :pixel-ratio js/devicePixelRatio\n    :orientation (when (.-orientation js/screen)\n                   (.-angle js/screen.orientation))})\n\n ;; Estimaci\u00f3n de pa\u00eds por zona horaria (sin API)\n (defn estimate-country []\n   (let [tz (.timeZone (.resolvedOptions (.DateTimeFormat js/Intl)))]\n     (cond\n       (.includes tz \"Mexico\") {:country \"M\u00e9xico\" :flag \"\ud83c\uddf2\ud83c\uddfd\"}\n       (.includes tz \"Argentina\") {:country \"Argentina\" :flag \"\ud83c\udde6\ud83c\uddf7\"}\n       (.includes tz \"Bogota\") {:country \"Colombia\" :flag \"\ud83c\udde8\ud83c\uddf4\"}\n       (.includes tz \"Lima\") {:country \"Per\u00fa\" :flag \"\ud83c\uddf5\ud83c\uddea\"}\n       (.includes tz \"Santiago\") {:country \"Chile\" :flag \"\ud83c\udde8\ud83c\uddf1\"}\n       (.includes tz \"Madrid\") {:country \"Espa\u00f1a\" :flag \"\ud83c\uddea\ud83c\uddf8\"}\n       (.includes tz \"New_York\") {:country \"Estados Unidos\" :flag \"\ud83c\uddfa\ud83c\uddf8\"}\n       (.includes tz \"London\") {:country \"Reino Unido\" :flag \"\ud83c\uddec\ud83c\udde7\"}\n       (.includes tz \"Paris\") {:country \"Francia\" :flag \"\ud83c\uddeb\ud83c\uddf7\"}\n       (.includes tz \"Berlin\") {:country \"Alemania\" :flag \"\ud83c\udde9\ud83c\uddea\"}\n       (.includes tz \"Rome\") {:country \"Italia\" :flag \"\ud83c\uddee\ud83c\uddf9\"}\n       (.includes tz \"Tokyo\") {:country \"Jap\u00f3n\" :flag \"\ud83c\uddef\ud83c\uddf5\"}\n       (.includes tz \"Shanghai\") {:country \"China\" :flag \"\ud83c\udde8\ud83c\uddf3\"}\n       (.includes tz \"Europe/\") {:country \"Europa\" :flag \"\ud83c\uddea\ud83c\uddfa\"}\n       (.includes tz \"America/\") {:country \"Am\u00e9rica\" :flag \"\ud83c\udf0e\"}\n       (.includes tz \"Asia/\") {:country \"Asia\" :flag \"\ud83c\udf0f\"}\n       :else {:country \"Mundo\" :flag \"\ud83c\udf0d\"})))\n\n ;; Componente principal\n (defn geo-info-display []\n   (let [browser-data (browser-info)\n         timezone-data (timezone-info)\n         screen-data (screen-info)\n         country-estimate (estimate-country)\n         ip-data (r/atom {:loading true})\n         show-details? (r/atom false)]\n\n     ;; Cargar IP info al montar (opcional)\n     (r/create-class\n      {:component-did-mount\n       (fn []\n         (go\n           (let [result (<! (fetch-ip-info))]\n             (reset! ip-data result))))\n\n       :reagent-render\n       (fn []\n         [:div.geo-info-container\n          [:div.info-header\n           [:h3 (str (:flag country-estimate) \" Informaci\u00f3n Detectada\")]\n           [:button.toggle-btn\n            {:on-click #(swap! show-details? not)}\n            (if @show-details? \"Ocultar detalles\" \"Ver detalles\")]]\n\n          [:div.info-summary\n           ;; IDIOMA\n           [:div.info-card\n            [:h4 \"\ud83d\udde3\ufe0f Idioma\"]\n            [:p (case (:language browser-data)\n                  \"es\" \"Espa\u00f1ol\"\n                  \"es-ES\" \"Espa\u00f1ol (Espa\u00f1a)\"\n                  \"es-MX\" \"Espa\u00f1ol (M\u00e9xico)\"\n                  \"en\" \"English\"\n                  \"fr\" \"Fran\u00e7ais\"\n                  \"de\" \"Deutsch\"\n                  (:language browser-data))]\n            (when @show-details?\n              [:div.details\n               [:strong \"Idiomas preferidos:\"]\n               [:ul\n                (for [lang (:languages browser-data)]\n                  [:li {:key lang} lang])]])]\n\n           ;; ZONA HORARIA\n           [:div.info-card\n            [:h4 \"\ud83d\udd50 Zona Horaria\"]\n            [:p (:timezone timezone-data)]\n            (when @show-details?\n              [:div.details\n               [:p [:strong \"Hora local: \"] (:local-time timezone-data)]\n               [:p [:strong \"Offset UTC: \"] (:offset-hours timezone-data) \" horas\"]])]\n\n           ;; UBICACI\u00d3N ESTIMADA\n           [:div.info-card\n            [:h4 \"\ud83d\udccd Ubicaci\u00f3n Estimada\"]\n            [:p (str (:flag country-estimate) \" \" (:country country-estimate))]\n            (when @show-details?\n              [:div.details\n               [:p [:strong \"Basado en: \"] \"Zona horaria del navegador\"]\n               [:p [:strong \"Precisi\u00f3n: \"] \"Pa\u00eds/Regi\u00f3n aproximado\"]])]\n\n           ;; IP INFO (si se carga)\n           (when (and (not (:loading @ip-data)) (:success @ip-data))\n             [:div.info-card\n              [:h4 \"\ud83c\udf10 IP Info\"]\n              (let [data (:data @ip-data)]\n                [:div\n                 [:p (str (:city data) \", \" (:country_name data))]\n                 (when @show-details?\n                   [:div.details\n                    [:p [:strong \"IP: \"] (:ip data)]\n                    [:p [:strong \"ISP: \"] (:org data)]])])])]\n\n          ;; DETALLES T\u00c9CNICOS\n          (when @show-details?\n            [:div.technical-details\n             [:h4 \"\ud83d\udd27 Informaci\u00f3n T\u00e9cnica\"]\n             [:div.tech-grid\n              [:div.tech-item\n               [:label \"Navegador:\"]\n               [:span (cond\n                        (.includes (:user-agent browser-data) \"Chrome\") \"Chrome\"\n                        (.includes (:user-agent browser-data) \"Firefox\") \"Firefox\"\n                        (.includes (:user-agent browser-data) \"Safari\") \"Safari\"\n                        (.includes (:user-agent browser-data) \"Edge\") \"Edge\"\n                        :else \"Otro\")]]\n\n              [:div.tech-item\n               [:label \"Sistema:\"]\n               [:span (:platform browser-data)]]\n\n              [:div.tech-item\n               [:label \"Pantalla:\"]\n               [:span (str (:width screen-data) \"\u00d7\" (:height screen-data))]]\n\n              [:div.tech-item\n               [:label \"En l\u00ednea:\"]\n               [:span (if (:online browser-data) \"\u2705 S\u00ed\" \"\u274c No\")]]]])])})))\n\n(defn welcome-message []\n  (let [lang (.-language js/navigator)\n        hour (.getHours (js/Date.))\n\n        greeting (cond\n                   (< hour 12) \"Buenos d\u00edas\"\n                   (< hour 18) \"Buenas tardes\"\n                   :else \"Buenas noches\")\n\n        lang-name (case (.substring lang 0 2)\n                    \"es\" \"espa\u00f1ol\"\n                    \"en\" \"ingl\u00e9s\"\n                    \"fr\" \"franc\u00e9s\"\n                    \"de\" \"alem\u00e1n\"\n                    \"otro idioma\")]\n\n    [:div.welcome-banner\n     [:h2 (str greeting \"! \ud83d\udc4b\")]\n     [:p (str \"Vemos que tu navegador est\u00e1 en \" lang-name)]\n     [:p \"\u00bfNecesitas ayuda con tus estudios? \u00a1Est\u00e1s en el lugar correcto!\"]]))\n"]}