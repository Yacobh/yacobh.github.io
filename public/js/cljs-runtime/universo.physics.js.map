{"version":3,"sources":["universo/physics.cljs"],"mappings":";AAGA,8CAAA,9CAAMA,oGAA4BC;AAAlC,AACE,OAACC,cACA,iBAAAC,qBAAA,oEAAAC;AAAA,AAAA,YAAAC,kBAAA,KAAA;AAAA,AAAA,IAAAD,eAAAA;;AAAA,AAAA,IAAAE,qBAAA,AAAAC,cAAAH;AAAA,AAAA,GAAAE;AAAA,AAAA,IAAAF,eAAAE;AAAA,AAAA,GAAA,AAAAE,6BAAAJ;AAAA,IAAAK,kBAg9EgD,AAAAwB,sBAAA7B;IAh9EhDM,qBAAA,AAAAC,gBAAAF;IAAAG,WAAA,AAAAC,uBAAAH;AAAA,AAAA,GAAA,AAAA,iBAAAI,WAAA;;AAAA,AAAA,GAAA,CAAAA,WAAAJ;AAAA,QAAA,AAAAK,eAAAN,gBAAAK,nCAAMU;AAAN,AAAA,AAAA,AAAAR,uBAAAJ,SAAA,2CAAA,0EAAA,yEAAA,0EAAA,sHAAA,jSACO,AAACc,uEACF,mBAAA,nBAACC,0EACD,mBAAA,nBAACA,sFACM,qDAAA,pDAAG,6CAAA,7CAACC,iHACN,AAACA;;AALZ,eAAA,CAAAd,WAAA;;;;AAAA;;;;;AAAA,OAAAG,qBAAA,AAAAC,gBAAAN,UAAA,AAAAO,0DAAA,AAAAC,qBAAAhB;;AAAA,OAAAa,qBAAA,AAAAC,gBAAAN,UAAA;;;AAAA,QAAA,AAAAS,gBAAAjB,pBAAMoB;AAAN,AAAA,OAAAF,eAAA,2CAAA,0EAAA,yEAAA,0EAAA,sHAAA,+GAAA,AAAAH,0DAAA,AAAAI,eAAAnB,zdACO,AAACsB,uEACF,mBAAA,nBAACC,0EACD,mBAAA,nBAACA,sFACM,qDAAA,pDAAG,6CAAA,7CAACC,iHACN,AAACA;;;AALZ;;;;GAAA,KAAA;;AAAA,AAAA,OAAAzB,mBAAQ,AAACsB,8CAAMxB;;;AAQlB,4CAAA,5CAAM4B,gGAA0BC;AAAhC,qGACMA,/CACA,wDAAA,xDAACC,uGAAUC,iBAAE,AAAA,0FAAWF,xQACxB,mRAAA,5QAACC,4TAAUC,iBAAE,AAAA,0FAAWF","names":["universo.physics/generate-quantum-particles","n","cljs.core/vec","iter__5480__auto__","s__11968","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5478__auto__","size__5479__auto__","cljs.core/count","b__11970","cljs.core/chunk-buffer","i__11969","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__11967","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","cljs.core.range","cljs.core/random-uuid","cljs.core/rand-int","cljs.core.rand","universo.physics/update-particle-position","particle","cljs.core.update","cljs.core/+","cljs.core/chunk-first"],"sourcesContent":["(ns universo.physics)\n\n;; Generador de part\u00edculas cu\u00e1nticas simplificado\n(defn generate-quantum-particles [n]\n  (vec\n   (for [i (range n)]\n     {:id (random-uuid)\n      :x (rand-int 800)\n      :y (rand-int 600)\n      :momentum (- (rand 2) 1)\n      :energy (rand)})))\n\n;; Funci\u00f3n de movimiento simple\n(defn update-particle-position [particle]\n  (-> particle\n      (update :x + (:momentum particle))\n      (update :y + (:momentum particle))))\n"]}