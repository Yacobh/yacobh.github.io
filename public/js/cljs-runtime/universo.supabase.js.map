{"version":3,"sources":["universo/supabase.cljs"],"mappings":";;AAIA,iCAAA,jCAAKA;AACL,sCAAA,tCAAKC;AAEL,AAAKC,oCACH,AAACC,uEAAsBH,+BAAaC;AAEtC,YAAA,ZAACG,oDAA6CF;AAG9C,4BAAA,5BAAMG,gEAASC,MAAMC;AAArB,OACML,PAEA,OAAA,0DAAA,WAAiCI,mBACGC;;AAG1C,wCAAA,xCAAMC;AAAN,OACMN,PAEA,OAAA,uDAAA,cAAA,qBAAA,gBACiD,AAAQO;;AAG/D,6BAAA,7BAAMC;AAAN,OACMR,PAEA,OAAA;;AAGN,gCAAA,hCAAMS;AAAN,AACE,YAAA,ZAACP,kCAAqCQ;;AACtC,YAAA,ZAACR,gCAAmC,AAAQF;;AAC5C,YAAA,ZAACE,+BAAkC,0DAAA,oDAAA,5FAAM,AAAQF,wCACZ,AAACW,YAAe,AAAQX;;AAG7D,IAAAY,qBAAc,AAAQZ;AAAtB,AAAA,oBAAAY;AAAA,WAAAA,PAASC;AAAT,AACE,IAAAD,yBAAwB,AAAcC;AAAtC,AAAA,oBAAAD;AAAA,qBAAAA,jBAASE;AAAT,AACE,AACE,YAAA,ZAACZ;;AACD,OAAaW;;AACf,qBAAA,dAACE;;;AACH,qBAAA,dAACA;;;AAML,yCAAA,zCAAMC,0FAAsBC;AAA5B,OACMjB,PAEA,OAAA,yDAAoBiB;;AAG1B,4BAAA,5BAAMC,gEAASd,MAAMC;AAArB,OACML,PAEA,OAAA,8CAAA,WAAqBI,mBACGC","names":["universo.supabase/supabase-url","universo.supabase/supabase-anon-key","universo.supabase/supabase-client","js/module$node_modules$$supabase$supabase_js$dist$main$index.createClient","js/console.log","universo.supabase/sign-in","email","password","universo.supabase/sign-in-with-google","js/window.location","universo.supabase/sign-out","universo.supabase/get-session","js/module$node_modules$$supabase$supabase_js$dist$main$index","js/Object.keys","temp__5802__auto__","auth","get-session-fn","js/console.error","universo.supabase/on-auth-state-change","callback","universo.supabase/sign-up"],"sourcesContent":["(ns universo.supabase\n  (:require [\"@supabase/supabase-js\" :as supabase]))\n\n;; Tokens anonimos de Supabase\n(def supabase-url \"https://jmnqklhxcdccvdhuuiji.supabase.co\")\n(def supabase-anon-key \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImptbnFrbGh4Y2RjY3ZkaHV1aWppIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg3NDAwNDksImV4cCI6MjA2NDMxNjA0OX0.WXchV7eoj4pzb8W_N_msmLNwRGEjWoAMRYrBApdRvOo\")\n\n(def supabase-client\n  (supabase/createClient supabase-url supabase-anon-key))\n\n(js/console.log \"\ud83d\udd0c Cliente Supabase creado:\" supabase-client)\n\n; Login con email/password\n(defn sign-in [email password]\n  (-> supabase-client\n      .-auth\n      (.signInWithPassword #js {:email email\n                                :password password})))\n\n;; Login con Google\n(defn sign-in-with-google []\n  (-> supabase-client\n      .-auth\n      (.signInWithOAuth #js {:provider \"google\"\n                             :options #js {:redirectTo (.-href js/window.location)}})))\n\n;; Logout\n(defn sign-out []\n  (-> supabase-client\n      .-auth\n      (.signOut)))\n\n;; Obtener sesi\u00f3n actual\n(defn get-session []\n  (js/console.log \"1. supabase object:\" supabase)\n  (js/console.log \"2. supabase.auth:\" (.-auth supabase-client))\n  (js/console.log \"3. auth methods:\" (when (.-auth supabase-client)\n                                       (js/Object.keys (.-auth supabase-client))))\n\n  ;; Intentar llamar el m\u00e9todo solo si existe\n  (if-let [auth (.-auth supabase-client)]\n    (if-let [get-session-fn (.-getSession auth)]\n      (do\n        (js/console.log \"4. Calling getSession...\")\n        (.getSession auth))\n      (js/console.error \"getSession method not found!\"))\n    (js/console.error \"auth property not found!\")))\n\n\n\n\n;; Escuchar cambios de autenticaci\u00f3n\n(defn on-auth-state-change [callback]\n  (-> supabase-client\n      .-auth\n      (.onAuthStateChange callback)))\n\n;; Tambi\u00e9n necesitas agregar sign-up a tu supabase.cljs:\n(defn sign-up [email password]\n  (-> supabase-client\n      .-auth\n      (.signUp #js {:email email\n                    :password password})))\n"]}