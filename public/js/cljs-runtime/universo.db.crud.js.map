{"version":3,"sources":["universo/db/crud.cljs"],"mappings":";AAIA;;;wCAAA,xCAAMA;AAAN,AAAA,kDAAA,qDAAA,KAAA,yDAAA,KAAA,8GAAA,jDAKa,AAAY,AAAkB,AAAiBC,yGACjD,AAAYC;;AAEvB;;;2CAAA,3CAAMC,8FAEHC,eAAeC;AAFlB,AAGE,IAAMC,KAAG,AAACC;AAAV,AACE,YAAA,ZAACC,sDAA+CJ;;AAE5C,AAAOK,uCAAgBJ,vCACvB,0DAAS,AAACK,qBAAQN,/EAClB,qGAAO,WAAKO,hHAWZ;AAXO,AACE,YAAA,ZAACH,kDAA2CG;;AAC5C,oBAAI,AAASA;AACX,AACE,cAAA,dAACC,0CAAwC,AAASD;;AAClD,kEAAA,2CAAA,2DAAA,MAAA,vKAACE,wDAAWP,sKACW,AAAW,AAASK;;AAC7C,AACE,YAAA,ZAACH,mDAAiD,AAAQG;;AAC1D,kEAAA,2CAAA,2DAAA,KAAA,tKAACE,wDAAWP,mKACU,wHAAA,2EAAA,nMAACQ,0DAAQ,AAAQH;;UAC5C,WAAKI;AAAL,AACE,cAAA,dAACH,8CAAuCG;;AACxC,kEAAA,2CAAA,2DAAA,MAAA,vKAACF,wDAAWP,sKACW,AAAWS;;;AAChDT;;AAIJ;;;iCAAA,jCAAMU,0EACHX;AADH,AAEE,IAAMC,KAAG,AAACC;AAAV,AACM,AAAOE,uCAAgBJ,vCACvB,0DAAA,1DACA,oEAAO,WAAKM,/EAOZ;AAPO,AACE,YAAA,ZAACH,kDAA2CG;;AAC5C,oBAAI,AAASA;AACX,kEAAA,2CAAA,2DAAA,MAAA,vKAACE,wDAAWP,sKACW,AAAW,AAASK;;AAC3C,kEAAA,2CAAA,2DAAA,KAAA,tKAACE,wDAAWP,mKACU,wHAAA,2EAAA,nMAACQ,0DAAQ,AAAQH;;UAC1C,WAAKI;AAAL,AACE,kEAAA,2CAAA,2DAAA,MAAA,vKAACF,wDAAWP,sKACW,AAAWS;;;AAChDT","names":["universo.db.crud/collect-visitor-data","js/Intl","js/navigator","universo.db.crud/insert-data-table!","data-to-insert","table-name","ch","cljs.core.async.chan","js/console.log","universo.supabase/supabase-client","cljs.core/clj->js","result","js/console.error","cljs.core.async.put_BANG_","cljs.core.js__GT_clj","error","universo.db.crud/get-all-table"],"sourcesContent":["(ns universo.db.crud\n  (:require [universo.supabase :refer [supabase-client]]\n            [cljs.core.async :as async :refer [go <!]]))\n\n(defn collect-visitor-data\n  \"Recolecta datos b\u00e1sicos del visitante\"\n  []\n  {:pais nil                    ; Lo llenaremos despu\u00e9s con IP API\n   :ciudad nil                  ; Lo llenaremos despu\u00e9s con IP API\n   :timezone (.-timeZone (.resolvedOptions (.DateTimeFormat js/Intl)))\n   :idioma (.-language js/navigator)})\n\n(defn insert-data-table!\n  \"Inserta nuevo visitante en la tabla\"\n  [data-to-insert table-name]\n  (let [ch (async/chan)]\n    (js/console.log \"\ud83d\udce4 Enviando datos a Supabase:\" data-to-insert)\n\n    (-> (.from supabase-client table-name)\n        (.insert (clj->js data-to-insert))\n        (.then (fn [result]\n                 (js/console.log \"\ud83d\udce1 Respuesta de Supabase:\" result)\n                 (if (.-error result)\n                   (do\n                     (js/console.error \"\u274c Error de Supabase:\" (.-error result))\n                     (async/put! ch {:success false\n                                     :error (.-message (.-error result))}))\n                   (do\n                     (js/console.log \"\u2705 Datos guardados exitosamente:\" (.-data result))\n                     (async/put! ch {:success true\n                                     :data (js->clj (.-data result) :keywordize-keys true)})))))\n        (.catch (fn [error]\n                  (js/console.error \"\ud83d\udca5 Error capturado:\" error)\n                  (async/put! ch {:success false\n                                  :error (.-message error)}))))\n    ch))\n\n\n\n(defn get-all-table \"Obtiene todos los elementos de la tabla\"\n  [table-name]\n  (let [ch (async/chan)]\n    (-> (.from supabase-client table-name)\n        (.select \"*\")\n        (.then (fn [result]\n                 (js/console.log \"\ud83d\udce1 Respuesta de Supabase:\" result)\n                 (if (.-error result)\n                   (async/put! ch {:success false\n                                   :error (.-message (.-error result))})\n                   (async/put! ch {:success true\n                                   :data (js->clj (.-data result) :keywordize-keys true)}))))\n        (.catch (fn [error]\n                  (async/put! ch {:success false\n                                  :error (.-message error)}))))\n    ch))\n"]}