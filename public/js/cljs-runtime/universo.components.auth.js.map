{"version":3,"sources":["universo/components/auth.cljs"],"mappings":"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","names":["universo.components.auth/auth-component","email","reagent.core.atom","password","mode","user","loading","error","message","universo.supabase/get-session","res","temp__5804__auto__","session","cljs.core/reset!","cljs.core/deref","p1__11896#","p1__11897#","universo.supabase/sign-out","cljs.core._EQ_","e","auth-fn","universo.supabase/sign-in","universo.supabase/sign-up","G__11899","G__11900","err"],"sourcesContent":["(ns universo.components.auth\n  (:require [reagent.core :as r]\n            [universo.supabase :as sb]))\n\n(defn auth-component []\n  (let [;; Estado del formulario\n        email (r/atom \"\")\n        password (r/atom \"\")\n        mode (r/atom :login) ; :login o :register\n\n        ;; Estado de la app\n        user (r/atom nil)\n        loading (r/atom false)\n        error (r/atom nil)\n        message (r/atom nil)]\n\n    ;; Verificar sesi\u00f3n al cargar\n    (-> (sb/get-session)\n        (.then (fn [res]\n                 (when-let [session (.. res -data -session)]\n                   (reset! user (.-user session))))))\n\n    (fn []\n      [:div.auth-container\n       (if @user\n         ;; Usuario logueado\n         [:div.user-panel\n          [:h2 \"Bienvenido\"]\n          [:p \"Email: \" (.-email @user)]\n          [:button {:on-click (fn []\n                                (sb/sign-out)\n                                (reset! user nil)\n                                (reset! message \"Sesi\u00f3n cerrada\"))}\n           \"Cerrar Sesi\u00f3n\"]]\n\n         ;; Formulario de login/registro\n         [:div.auth-form\n          [:h2 (if (= @mode :login) \"Iniciar Sesi\u00f3n\" \"Registrarse\")]\n\n          ;; Mensajes\n          (when @error\n            [:div.error @error])\n\n          (when @message\n            [:div.message @message])\n\n          ;; Formulario\n          [:form {:on-submit (fn [e]\n                               (.preventDefault e)\n                               (reset! loading true)\n                               (reset! error nil)\n                               (reset! message nil)\n\n                               (let [auth-fn (if (= @mode :login)\n                                               sb/sign-in\n                                               sb/sign-up)]\n                                 (-> (auth-fn @email @password)\n                                     (.then (fn [res]\n                                              (reset! loading false)\n                                              (if (.-error res)\n                                                (reset! error (.. res -error -message))\n                                                (if (= @mode :login)\n                                                  (reset! user (.. res -data -user))\n                                                  (reset! message \"\u00a1Registro exitoso! Revisa tu email.\")))))\n                                     (.catch (fn [err]\n                                               (reset! loading false)\n                                               (reset! error \"Error de conexi\u00f3n\"))))))}\n\n           [:input {:type \"email\"\n                    :placeholder \"Email\"\n                    :value @email\n                    :on-change #(reset! email (.. % -target -value))\n                    :required true}]\n\n           [:input {:type \"password\"\n                    :placeholder \"Contrase\u00f1a (m\u00ednimo 6 caracteres)\"\n                    :value @password\n                    :on-change #(reset! password (.. % -target -value))\n                    :required true\n                    :min-length 6}]\n\n           [:button {:type \"submit\"\n                     :disabled @loading}\n            (if @loading\n              \"Procesando...\"\n              (if (= @mode :login) \"Iniciar Sesi\u00f3n\" \"Registrarse\"))]]\n\n          ;; Cambiar entre login y registro\n          [:p.switch-mode\n           (if (= @mode :login)\n             [:span \"\u00bfNo tienes cuenta? \"\n              [:a {:href \"#\"\n                   :on-click (fn [e]\n                               (.preventDefault e)\n                               (reset! mode :register)\n                               (reset! error nil))}\n               \"Reg\u00edstrate\"]]\n             [:span \"\u00bfYa tienes cuenta? \"\n              [:a {:href \"#\"\n                   :on-click (fn [e]\n                               (.preventDefault e)\n                               (reset! mode :login)\n                               (reset! error nil))}\n               \"Inicia sesi\u00f3n\"]])]])])))\n"]}