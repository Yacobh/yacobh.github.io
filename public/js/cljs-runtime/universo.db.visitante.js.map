{"version":3,"sources":["universo/db/visitante.cljs"],"mappings":";AAIA,6CAAA,7CAAMA;AAAN,AAAA;AAAA,kDAAA,qDAAA,KAAA,yDAAA,KAAA,8GAAA,jDAIa,AAAY,AAAkB,AAAiBC,yGACjD,AAAYC;;AAEvB;;;6CAAA,7CAAMC,kGAEHC;AAFH,AAGE,IAAMC,KAAG,AAACC;AAAV,AACE,YAAA,ZAACC,sDAA+CH;;AAE5C,uCAAA,vCAAOI,AACP,yDAAS,AAACC,qBAAQL,9EAClB,kGAAO,WAAKM,7GAWZ;AAXO,AACE,YAAA,ZAACH,kDAA2CG;;AAC5C,oBAAI,AAASA;AACX,AACE,cAAA,dAACC,0CAAwC,AAASD;;AAClD,kEAAA,2CAAA,2DAAA,MAAA,vKAACE,wDAAWP,sKACW,AAAW,AAASK;;AAC7C,AACE,YAAA,ZAACH,mDAAiD,AAAQG;;AAC1D,kEAAA,2CAAA,2DAAA,KAAA,tKAACE,wDAAWP,mKACU,wHAAA,2EAAA,nMAACQ,0DAAQ,AAAQH;;UAC5C,WAAKI;AAAL,AACE,cAAA,dAACH,8CAAuCG;;AACxC,kEAAA,2CAAA,2DAAA,MAAA,vKAACF,wDAAWP,sKACW,AAAWS;;;AAChDT;;AAEJ;;;yCAAA,zCAAMU;AAAN,AACE,IAAMV,KAAG,AAACC;AAAV,AACM,uCAAA,vCAAOE,AACP,yDAAA,zDACA,mEAAO,WAAKE,9EAOZ;AAPO,AACE,YAAA,ZAACH,kDAA2CG;;AAC5C,oBAAI,AAASA;AACX,kEAAA,2CAAA,2DAAA,MAAA,vKAACE,wDAAWP,sKACW,AAAW,AAASK;;AAC3C,kEAAA,2CAAA,2DAAA,KAAA,tKAACE,wDAAWP,mKACU,wHAAA,2EAAA,nMAACQ,0DAAQ,AAAQH;;UAC1C,WAAKI;AAAL,AACE,kEAAA,2CAAA,2DAAA,MAAA,vKAACF,wDAAWP,sKACW,AAAWS;;;AAChDT","names":["universo.db.visitante/collect-visitor-data","js/Intl","js/navigator","universo.db.visitante/insert-visitor!","visitor-data","ch","cljs.core.async.chan","js/console.log","universo.supabase/supabase-client","cljs.core/clj->js","result","js/console.error","cljs.core.async.put_BANG_","cljs.core.js__GT_clj","error","universo.db.visitante/get-all-visitors"],"sourcesContent":["(ns universo.db.visitante\n  (:require [universo.supabase :refer [supabase-client]]\n            [cljs.core.async :as async :refer [go <!]]))\n\n(defn collect-visitor-data []\n  \"Recolecta datos b\u00e1sicos del visitante\"\n  {:pais nil                    ; Lo llenaremos despu\u00e9s con IP API\n   :ciudad nil                  ; Lo llenaremos despu\u00e9s con IP API\n   :timezone (.-timeZone (.resolvedOptions (.DateTimeFormat js/Intl)))\n   :idioma (.-language js/navigator)})\n\n(defn insert-visitor!\n  \"Inserta nuevo visitante en la tabla\"\n  [visitor-data]\n  (let [ch (async/chan)]\n    (js/console.log \"\ud83d\udce4 Enviando datos a Supabase:\" visitor-data)\n\n    (-> (.from supabase-client \"visitor\")  ; Nombre de tu tabla\n        (.insert (clj->js visitor-data))\n        (.then (fn [result]\n                 (js/console.log \"\ud83d\udce1 Respuesta de Supabase:\" result)\n                 (if (.-error result)\n                   (do\n                     (js/console.error \"\u274c Error de Supabase:\" (.-error result))\n                     (async/put! ch {:success false\n                                     :error (.-message (.-error result))}))\n                   (do\n                     (js/console.log \"\u2705 Datos guardados exitosamente:\" (.-data result))\n                     (async/put! ch {:success true\n                                     :data (js->clj (.-data result) :keywordize-keys true)})))))\n        (.catch (fn [error]\n                  (js/console.error \"\ud83d\udca5 Error capturado:\" error)\n                  (async/put! ch {:success false\n                                  :error (.-message error)}))))\n    ch))\n\n(defn get-all-visitors \"Obtiene todos los visitantes (para testing)\" []\n  (let [ch (async/chan)]\n    (-> (.from supabase-client \"visitor\")\n        (.select \"*\")\n        (.then (fn [result]\n                 (js/console.log \"\ud83d\udce1 Respuesta de Supabase:\" result)\n                 (if (.-error result)\n                   (async/put! ch {:success false\n                                   :error (.-message (.-error result))})\n                   (async/put! ch {:success true\n                                   :data (js->clj (.-data result) :keywordize-keys true)}))))\n        (.catch (fn [error]\n                  (async/put! ch {:success false\n                                  :error (.-message error)}))))\n    ch))\n"]}